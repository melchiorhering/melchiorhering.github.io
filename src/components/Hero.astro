---
import profilePictureTransparent from '@/assets/cartoon-profile-cutout.webp'
import travelPicture from '@/assets/travel-jordan.jpg'
import TypeWriteComponent from '@/components/react/TypeWriteComponent'
import { Image } from 'astro:assets'
import Polaroid from '@/components/Polaroid.astro'
import { heroData } from '@/data/data'
import { Icon } from 'astro-icon/components'
import Container from '@/components/Container.astro'
import AmsterdamFlag from '@/assets/amsterdam-flag.png'
---

{/* Hero Split into Two Sections */}
<div class='flex flex-col'>
	{/* Text Section - Full height on mobile */}
	<Container class='flex items-center justify-center lg:min-h-fit'>
		<div class='my-36 flex w-full items-center justify-center md:pt-0 lg:w-1/2 lg:justify-start'>
			<div class='flex w-full max-w-lg flex-col gap-2 px-4 lg:gap-4 lg:px-0 lg:text-left'>
				<h1 class={heroData.heading.class}>
					<TypeWriteComponent client:only='react' texts={heroData.texts} />
				</h1>

				<p class={heroData.description.class}>
					{heroData.description.text}
				</p>

				<div class='flex flex-col gap-x-2 sm:flex-row sm:justify-center lg:justify-start'>
					{
						heroData.buttons.map((button) => (
							<a href={button.href} class={button.class}>
								{button.iconName && <Icon name={button.iconName} class='h-5 w-5' />}
								{button.text}
							</a>
						))
					}
				</div>
			</div>
		</div>

		{/* Desktop-only image section */}
		<div class='relative hidden h-[600px] w-[600px] lg:block'>
			{/* Info Panels - Fixed positions */}
			<div
				id='info-amsterdam'
				class='pointer-events-none absolute -left-1/4 -top-9 w-64 opacity-0 transition-opacity duration-300'
			>
				<div class='rounded-lg bg-white p-4 shadow-lg dark:bg-gray-800'>
					<div class='flex w-full items-center justify-between'>
						<h3 class='font-bold text-sky-600 dark:text-sky-400'>Amsterdam</h3>
						<Image src={AmsterdamFlag} alt='Flag of Amsterdam' class='w-6 object-contain' />
					</div>

					<p class='mt-2 text-sm text-gray-600 dark:text-gray-300'>Born and raised!</p>
				</div>
			</div>

			<div
				id='info-travel'
				class='pointer-events-none absolute -right-36 bottom-36 w-64 opacity-0 transition-opacity duration-300'
			>
				<div class='rounded-lg bg-white p-4 shadow-lg dark:bg-gray-800'>
					<h3 class='font-bold text-sky-600 dark:text-sky-400'>Travel Enthusiast</h3>
					<p class='mt-2 text-sm text-gray-600 dark:text-gray-300'>
						Exploring new places and experiencing different cultures.
					</p>
				</div>
			</div>

			<div
				id='info-dev'
				class='duration-30 w-82 pointer-events-none absolute -bottom-10 left-1/2 z-50 opacity-0 transition-opacity'
			>
				<div class='rounded-lg bg-white p-4 shadow-lg dark:bg-gray-800'>
					<h3 class='font-bold text-sky-600 dark:text-sky-400'>Tech Enthusiast</h3>
					<p class='mt-2 text-sm text-gray-600 dark:text-gray-300'>
						Passionate about creating intuitive and efficient Data/AI/Web applications, using all
						kinds of technologies.
					</p>
				</div>
			</div>

			<Polaroid
				image='https://cdn.pixabay.com/photo/2021/11/10/07/17/canal-6783153_1280.jpg'
				alt='Amsterdam Westerkerk'
				width={280}
				height={280}
				iconName='house'
				class='absolute right-32 top-0 rotate-3 md:rotate-3 hover:md:rotate-0'
				infoId='info-amsterdam'
			/>

			<Polaroid
				image={travelPicture}
				alt='Travel; Camel in Jordan'
				width={220}
				iconName='airplane'
				class='absolute -right-20 top-0 -rotate-3 hover:z-0 hover:translate-x-8 hover:rotate-0 md:rotate-6'
				infoId='info-travel'
			/>
			<Polaroid
				image={profilePictureTransparent}
				alt='Disney Like Profile'
				width={240}
				iconName='person'
				imageClass='bg-[url(/images/binary-background.webp)]'
				class='absolute -left-8 bottom-0 rotate-3 hover:rotate-0 md:rotate-6'
				infoId='info-dev'
			/>

			{/* Decorative elements */}
			<div
				class='absolute -right-40 top-0 h-20 w-20 animate-pulse rounded-full border-4 border-dashed border-sky-200/80 dark:border-sky-800/80'
			>
			</div>
			<div
				class='absolute -left-16 bottom-12 h-14 w-14 animate-pulse rounded-lg border-4 border-sky-200/80 dark:border-sky-800/80'
			>
			</div>
			<div
				class='absolute bottom-0 right-20 h-16 w-16 animate-pulse rounded-full border-4 border-sky-200/80 dark:border-sky-800/80'
			>
			</div>
		</div>
	</Container>

	{/* Mobile-only Polaroid Section */}
	<div class='lg:hidden'>
		<Container>
			<div class='flex flex-col items-center gap-16 py-16'>
				<div class='w-[280px]'>
					<Polaroid
						image='https://cdn.pixabay.com/photo/2021/11/10/07/17/canal-6783153_1280.jpg'
						alt='Amsterdam Westerkerk'
						width={280}
						height={280}
						iconName='house'
						class='rotate-3 hover:rotate-0'
					/>
				</div>
				<div class='w-[280px]'>
					<Polaroid
						image={travelPicture}
						alt='Travel; Camel in Jordan'
						width={280}
						iconName='airplane'
						class='rotate-3 hover:rotate-0'
					/>
				</div>
				<div class='w-[280px]'>
					<Polaroid
						image={profilePictureTransparent}
						alt='Disney Like Profile'
						width={280}
						iconName='person'
						imageClass='bg-[url(/images/binary-background.webp)]'
						class='rotate-3 hover:rotate-0'
					/>
				</div>
			</div>
		</Container>
	</div>
</div>

<script>
	const gallery = document.getElementById('image-gallery')
	const polaroids = gallery?.querySelectorAll('.polaroid')

	polaroids?.forEach((polaroid) => {
		if (polaroid instanceof HTMLElement) {
			// Type guard for HTMLElement
			polaroid.addEventListener('mouseenter', () => {
				// Reset all polaroids to initial z-index
				polaroids.forEach((p) => {
					if (p instanceof HTMLElement) {
						// Type guard for each element
						p.style.zIndex = '10'
					}
				})
				// Set hovered polaroid to highest z-index
				polaroid.style.zIndex = '30'
			})
		}
	})
</script>
