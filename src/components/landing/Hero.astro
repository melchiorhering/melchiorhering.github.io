---
import profilePictureTransparent from '@/assets/cartoon-profile-cutout.webp'
import travelPicture from '@/assets/travel-jordan.jpg'
import TypeWriteComponent from '@/components/react/TypeWriteComponent'
import { Image } from 'astro:assets'
import Polaroid from '@/components/landing/Polaroid.astro'
import { heroData } from '@/data/data'
import { Icon } from 'astro-icon/components'
import Container from '@/components/Container.astro'
import AmsterdamFlag from '@/assets/amsterdam-flag.png'
---

{/* Hero Split into Two Sections */}
<div class='flex flex-col'>
	{/* Text Section - Full height on mobile */}
	<Container class='flex items-center justify-center lg:min-h-fit'>
		<div class='flex items-center justify-center w-full my-36 md:pt-0 lg:w-1/2 lg:justify-start'>
			<div class='flex flex-col w-full max-w-lg gap-2 px-2 lg:gap-4 lg:px-0 lg:text-left'>
				{/* Add fixed height container for typewriter */}
				<div class='h-[120px] min-h-[120px]'>
					<h1 class={heroData.heading.class}>
						<TypeWriteComponent client:only='react' texts={heroData.texts} />
					</h1>
				</div>

				<p class={heroData.description.class}>
					{heroData.description.text}
				</p>

				<div class='flex w-full gap-3 py-4 md:w-5/6'>
					{
						heroData.buttons.map((button) => (
							<a
								href={button.href}
								class={`inline-flex flex-1 items-center justify-center gap-2 rounded-md px-6 py-2 text-sm font-semibold text-white shadow transition hover:scale-105 hover:shadow-lg ${button.class}`}
							>
								{button.iconName && <Icon name={button.iconName} class='w-5 h-5' />}
								{button.text}
							</a>
						))
					}
				</div>
			</div>
		</div>

		{/* Desktop-only image section */}
		<div class='relative hidden h-[600px] w-[600px] lg:block'>
			{/* Info Panels - Fixed positions */}
			<div
				id='info-amsterdam'
				class='absolute w-64 transition-opacity duration-300 opacity-0 pointer-events-none -left-1/4 -top-9'
			>
				<div class='p-4 bg-white rounded-lg shadow-lg dark:bg-gray-800'>
					<div class='flex items-center justify-between w-full'>
						<h3 class='font-bold text-sky-600 dark:text-sky-400'>Amsterdam</h3>
						<Image src={AmsterdamFlag} alt='Flag of Amsterdam' class='object-contain w-6' />
					</div>

					<p class='mt-2 text-sm text-gray-600 dark:text-gray-300'>Born and raised!</p>
				</div>
			</div>

			<div
				id='info-travel'
				class='absolute w-64 transition-opacity duration-300 opacity-0 pointer-events-none -right-36 bottom-4'
			>
				<div class='p-4 space-y-2 bg-white rounded-lg shadow-lg dark:bg-gray-800'>
					<h3 class='font-bold text-sky-600 dark:text-sky-400'>Exploring the world!</h3>
					<p class='text-sm text-gray-600 dark:text-gray-300'>
						My (tech)hobby basically let's me explore the world. Which is great.
					</p>
					<div class='flex items-center justify-center'>
						<img
							src='https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExMGswaXhqMm8zNzZ3bGxkaGFiZ2Z6YXZoNTE2bDZ2M3lmcDFkbXlrYyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/XrDT8BuYB3I2s/giphy.gif'
							alt='beach'
						/>
					</div>
				</div>
			</div>

			<div
				id='info-dev'
				class='absolute z-50 transition-opacity opacity-0 pointer-events-none duration-30 w-82 -bottom-10 left-1/2'
			>
				<div class='p-4 bg-white rounded-lg shadow-lg dark:bg-gray-800'>
					<h3 class='font-bold text-sky-600 dark:text-sky-400'>Tech Enthusiast</h3>
					<p class='mt-2 text-sm text-gray-600 dark:text-gray-300'>
						Passionate about creating intuitive and efficient Data/AI/Web applications, using all
						kinds of technologies.
					</p>
				</div>
			</div>

			<Polaroid
				image='https://cdn.pixabay.com/photo/2021/11/10/07/17/canal-6783153_1280.jpg'
				alt='Amsterdam Westerkerk'
				width={280}
				height={280}
				iconName='house'
				class='absolute top-0 right-32 rotate-3 md:rotate-3 hover:md:rotate-0'
				infoId='info-amsterdam'
			/>

			<Polaroid
				image={travelPicture}
				alt='Travel; Camel in Jordan'
				width={220}
				iconName='airplane'
				class='absolute top-0 -right-20 -rotate-3 hover:z-0 hover:translate-x-8 hover:rotate-0 md:rotate-6'
				infoId='info-travel'
			/>
			<Polaroid
				image={profilePictureTransparent}
				alt='Disney Like Profile'
				width={240}
				iconName='person'
				imageClass='bg-[url(/images/binary-background.webp)]'
				class='absolute -bottom-12 -left-6 rotate-3 hover:-bottom-10 hover:rotate-0 md:rotate-6'
				infoId='info-dev'
			/>

			{/* Decorative elements */}
			<div
				class='absolute top-0 w-20 h-20 border-4 border-dashed rounded-full -right-40 animate-pulse border-sky-200/80 dark:border-sky-800/80'
			>
			</div>
			<div
				class='absolute border-4 rounded-lg -left-16 bottom-12 h-14 w-14 animate-pulse border-sky-200/80 dark:border-sky-800/80'
			>
			</div>
			<div
				class='absolute bottom-0 w-16 h-16 border-4 rounded-full right-20 animate-pulse border-sky-200/80 dark:border-sky-800/80'
			>
			</div>
		</div>
	</Container>

	{/* Mobile-only Polaroid Section */}
	<div class='lg:hidden'>
		<Container>
			<div class='flex flex-col items-center gap-16 py-16'>
				<div class='w-[280px]'>
					<Polaroid
						image='https://cdn.pixabay.com/photo/2021/11/10/07/17/canal-6783153_1280.jpg'
						alt='Amsterdam Westerkerk'
						width={280}
						height={280}
						iconName='house'
						class='-rotate-3'
					/>
				</div>
				<div class='w-[280px]'>
					<Polaroid
						image={travelPicture}
						alt='Travel; Camel in Jordan'
						width={280}
						iconName='airplane'
						class='rotate-3'
					/>
				</div>
				<div class='w-[280px]'>
					<Polaroid
						image={profilePictureTransparent}
						alt='Disney Like Profile'
						width={280}
						iconName='person'
						imageClass='bg-[url(/images/binary-background.webp)]'
						class='-rotate-3'
					/>
				</div>
			</div>
		</Container>
	</div>
</div>

<script>
	const gallery = document.getElementById('image-gallery')
	const polaroids = gallery?.querySelectorAll('.polaroid')

	polaroids?.forEach((polaroid) => {
		if (polaroid instanceof HTMLElement) {
			// Type guard for HTMLElement
			polaroid.addEventListener('mouseenter', () => {
				// Reset all polaroids to initial z-index
				polaroids.forEach((p) => {
					if (p instanceof HTMLElement) {
						// Type guard for each element
						p.style.zIndex = '10'
					}
				})
				// Set hovered polaroid to highest z-index
				polaroid.style.zIndex = '30'
			})
		}
	})
</script>
