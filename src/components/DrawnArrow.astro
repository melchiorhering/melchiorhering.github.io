---
interface Props {
	text: string
	position: { x: number; y: number }
	rotation?: number
	class?: string
}

const { text, position, rotation = 0, class: className } = Astro.props
---

<div
	class:list={['absolute opacity-0 transition-all duration-300 group-hover:opacity-100', className]}
	style={`left: ${position.x}px; top: ${position.y}px; transform: rotate(${rotation}deg);`}
>
	{/* Reversed curved arrow path */}
	<svg
		width='100'
		height='60'
		viewBox='0 0 100 60'
		class='absolute stroke-gray-800 dark:stroke-gray-200'
		style='filter: drop-shadow(2px 2px 2px rgba(0,0,0,0.1));'
	>
		<path
			d='M95,50 Q70,50 50,30 T5,10'
			fill='none'
			stroke-width='2'
			stroke-dasharray='4 2'
			class='animate-draw'></path>
		{/* Arrow head now points to the image */}
		<path d='M7,10 L3,8 L5,12' fill='none' stroke-width='2' class='animate-draw'></path>
	</svg>

	{/* Move text bubble to opposite side */}
	<div
		class='absolute right-0 top-0 -translate-y-full whitespace-nowrap rounded-lg bg-gray-800/90 px-3 py-1.5 text-sm text-white dark:bg-gray-200/90 dark:text-gray-800'
	>
		{text}
	</div>
</div>

<style>
	@keyframes draw {
		from {
			stroke-dashoffset: 100;
		}
		to {
			stroke-dashoffset: 0;
		}
	}

	.animate-draw {
		stroke-dasharray: 100;
		stroke-dashoffset: 100;
		animation: draw 1s ease-out forwards;
	}
</style>
